AlvCtr_BMS_Sts AlvCtr_BMS_Sts_Data;
Bms_BatPreCdnSts Bms_BatPreCdnSts_Data;
CRC_BMS_Sts CRC_BMS_Sts_Data;

Rte_Read_AlvCtr_BMS_Sts_AlvCtr_BMS_Sts(&AlvCtr_BMS_Sts_Data);
Rte_Read_Bms_BatPreCdnSts_Bms_BatPreCdnSts(&Bms_BatPreCdnSts_Data);
Rte_Read_CRC_BMS_Sts_CRC_BMS_Sts(&CRC_BMS_Sts_Data);

u8arrayTx[INDEX_APSS_CMD] = (uint8)APSS_WRITE_CMD;
u8arrayTx[INDEX_APSS_LEN] = (uint8)(I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_LENGTH + 18);
u8arrayTx[INDEX_APSS_SEQ] = (uint8)((*Rte_Pim_MsgAlvCounter() & 0xFF00) >> 8);
u8arrayTx[INDEX_APSS_SEQ + 1] = (uint8)(*Rte_Pim_MsgAlvCounter() & 0x00FF);
u8arrayTx[INDEX_CAN_IF] = (uint8)(CAN_I1_Channel);
// u8arrayTx[INDEX_CAN_MSGID] = (uint8)((I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_FRAME_ID & 0xFF000000) >> 24);
// u8arrayTx[INDEX_CAN_MSGID + 1] = (uint8)((I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_FRAME_ID & 0x00FF0000) >> 16);
// u8arrayTx[INDEX_CAN_MSGID + 2] = (uint8)((I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_FRAME_ID & 0x0000FF00) >> 8);
// u8arrayTx[INDEX_CAN_MSGID + 3] = (uint8)(I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_FRAME_ID & 0x000000FF);
u8arrayTx[INDEX_CAN_MSGID + 3] = (uint8)((I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_FRAME_ID & 0xFF000000) >> 24);
u8arrayTx[INDEX_CAN_MSGID + 2] = (uint8)((I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_FRAME_ID & 0x00FF0000) >> 16);
u8arrayTx[INDEX_CAN_MSGID + 1] = (uint8)((I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_FRAME_ID & 0x0000FF00) >> 8);
u8arrayTx[INDEX_CAN_MSGID] = (uint8)(I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_FRAME_ID & 0x000000FF);
u8arrayTx[INDEX_CAN_DLC] = (uint8)(I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_LENGTH);

struct i1_can_fd_ver02_01_01_my_ecu_2_bms_sts_t bms_sts;

bms_sts.alv_ctr_bms_sts = (AlvCtr_BMS_Sts)AlvCtr_BMS_Sts_Data;
bms_sts.bms_bat_pre_cdn_sts = (Bms_BatPreCdnSts)Bms_BatPreCdnSts_Data;
bms_sts.crc_bms_sts = (CRC_BMS_Sts)CRC_BMS_Sts_Data;

uint8_t dataArray[I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_LENGTH] = {0};
if (i1_can_fd_ver02_01_01_my_ecu_2_bms_sts_pack(dataArray, &bms_sts, I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_LENGTH) == I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_LENGTH)
    memcpy(&u8arrayTx[INDEX_CAN_DATA], dataArray, I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_LENGTH);
    
uint32 crc_sum;
crc_sum = FlexCanApp_Calc_Crc32_test(&u8arrayTx, I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_LENGTH + 18, 0);
u8arrayTx[I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_LENGTH + INDEX_CAN_DATA] = (uint8_t)((crc_sum & 0xFF000000) >> 24);
u8arrayTx[I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_LENGTH + INDEX_CAN_DATA + 1] = (uint8_t)((crc_sum & 0x00FF0000) >> 16);
u8arrayTx[I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_LENGTH + INDEX_CAN_DATA + 2] = (uint8_t)((crc_sum & 0x0000FF00) >> 8);
u8arrayTx[I1_CAN_FD_VER02_01_01_MY_ECU_2_BMS_STS_LENGTH + INDEX_CAN_DATA + 3] = (uint8_t)(crc_sum & 0x000000FF);

Rte_Call_IF_IOHw_SPI_API_IoHwAbOperation_Communication(Master_To_APSS, &u8arrayTx, &u8arrayRx, APSS_NUM);
*Rte_Pim_MsgAlvCounter() = *Rte_Pim_MsgAlvCounter() + 1;
if (u8arrayRx[INDEX_APSS_CMD] == APSS_READ_CMD)
    Apss_Receive_Buffer_Enqueue(reccbufferQueue, u8arrayRx, &apss_recbufferHead, APSS_NUM);

